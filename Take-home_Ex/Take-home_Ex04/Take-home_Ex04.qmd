---
title: "Take-home Exercise 4"
subtitle: "Singapore bi-lateral trade performance in 2020 to 2022"
author: "Michael Djohan"
date: 19 February 2023
date-modified: "`r Sys.Date()`"
execute: 
  warning: false
format: html
editor: visual
toc-depth: 5
---

## **1. Overview**

This exercise aims to uncover the impact of COVID-19, global economic and political dynamic in 2022 on Singapore bi-lateral trade using time-series visualisation. The visualization is designed using `ggplot2`, its extensions, and `tidyverse` packages.

The original Merchandise Trade dataset was downloaded from [Department of Statistics](https://www.singstat.gov.sg/find-data/search-by-theme/trade-and-investment/merchandise-trade/latest-data) titled *Merchandise Trade by Region/Market*

The file downloaded was *outputFile.xlsx*

The study period is from for **January 2020 to December 2022** period.

## **2. Data Preparation**

### 2.1 Install R packages and import dataset

The code chunk below uses `pacman::p_load()` to check if packages are installed. If they are, they will be launched into R. The packages installed are

-   `readxl`: Used to reaad data from excel files

-   `knitr`: Used for dynamic report generation

-   `lubridate`: Used to work with date and time

-   `ggHoriPlot`:

-   `ggthemes`:

-   `plotly`: Used for creating interactive web-based graphs.

-   `ggbraid`: Used

-   `tidyverse`: A collection of core packages designed for data science, used extensively for data preparation and wrangling.

    All packages can be found within CRAN.

```{r}
#Load packages
pacman::p_load(readxl, knitr, lubridate, ggHoriPlot, ggthemes, plotly, tidyverse)
```

```{r}
remotes::install_github("nsgrantham/ggbraid")
library(ggbraid)
```

Import data from csv using `readxl::read_excel()` and store it in variable ***sgimport** and **sgexport***.

Note that by choosing the specific range, the period of interest (January 2020 to December 2022) is intentionally selected.

```{r}
#Import data
sgimport <- read_excel("data/outputFile.xlsx", sheet = "T1", range = "A10:AK129" )

sgexport <- read_excel("data/outputFile.xlsx", sheet = "T2", range = "A10:AK101" )
```

###### 

### 2.2 Data cleaning

Scope of the study is to understand bi-lateral trade of Singapore with countries / trade partners around the world. Hence, we will not include regions (i.e., Asia, Africa) or collection of countries (i.e., European Union or Other Countries In Oceania.

#### 2.2.1 Cleaning the countries data for sgimport and sgexport

```{r}
sgimport_ctry <- sgimport |> 
  
  #remove the first 7 rows, which are Total and non-countries
  filter(!row_number() %in% c(1:7)) |> 
  
  #remove the '(Thousand Dollars)' string from column Data Series and call it Countries
  mutate(Countries = str_remove(`Data Series`, 
                                " \\(Thousand Dollars\\)"), 
         .after = `Data Series`) |> 
  
  #remove 'Data Series' column
  select(-`Data Series`) 

kable(head(sgimport_ctry))
```

```{r}
sgexport_ctry <- sgexport |> 
  
  #remove the first 7 rows, which are Total and non-countries
  filter(!row_number() %in% c(1:7)) |> 
  
  #remove the '(Thousand Dollars)' string from column Data Series and call it Countries
  mutate(Countries = str_remove(`Data Series`, 
                                " \\(Thousand Dollars\\)"), 
         .after = `Data Series`) |> 
  
  #remove 'Data Series' column
  select(-`Data Series`) 

kable(head(sgexport_ctry))
```

Identify differences between sgimport and sgexport as the number of rows are not the same

112-84 = 28. The difference below is 28, indicating Singapore import from these countries but there is no export data to these countries

```{r}
import_vs_export <- setdiff(sgimport_ctry$Countries, sgexport_ctry$Countries) |> 
  enframe(name = NULL, value = "diff") |> 
  arrange(diff)

import_vs_export  |> 
  kable(caption = "Countries in sgimport that is not in sgexport",
               row.names = TRUE)
```

#### 2.2.2 Pivot and transform datasets to time-series

```{r}
sgimport_cln <- sgimport_ctry |> 
  
  #pivot_longer to get year and month timeseries
  pivot_longer(cols = !Countries,
               names_to = c("Year", "Month"),
               names_sep = " ",
               values_to = "Import_SGD"
               ) |> 
  
  #Convert Month to factors and Years to integers for ordering purposes
  #Multiply values by 1000
  mutate(Month = factor(Month, levels = month.abb),
         Year = as.integer(Year),
         Month_Year = make_date(Year, Month),
         .before = 1) |> 
  
  mutate(Import_SGD = Import_SGD*1000) 

sgimport_cln
```

```{r}
sgexport_cln <- sgexport_ctry |> 
  
  #pivot_longer to get year and month timeseries
  pivot_longer(cols = !Countries,
               names_to = c("Year", "Month"),
               names_sep = " ",
               values_to = "Export_SGD"
               ) |> 
  
  #Convert Month and Year to factors for ordering purposes
  #Multiply values by 1000
  mutate(Month = factor(Month, levels = month.abb),
         Year = as.integer(Year),
         Month_Year = make_date(Year, Month),
         .before = 1) |> 
  
  mutate(Export_SGD = Export_SGD*1000) 

sgexport_cln
```

#### 2.2.3 Joining the two datasets and calculate trade balance

Explain left join

Add trade balance and trade values

Additionally also exclude countries with which Singapore has no available export data. We cannot assume that the exports are zero, just because there is no available data. This is to avoid incomplete data when analysing trade balances.

"Germany, Democratic Republic Of" is the official name of East Germany, a state that no longer exists since German reunification in 1990. As such, the import and export values are zeroes. This country is in dataset as the dataset tracks Singapore import/export data from 1976. Given the scope of the study from January 2020 onwards, we will remove this country as well.

"Other Countries In Oceania" is also removed as it is a collection of countries

```{r}
sgtrade_cln <- sgimport_cln |> 
  
  #join sgimport_cln with sgexport_cln
  left_join(sgexport_cln, by = c('Countries' = 'Countries', 'Month_Year' = 'Month_Year', 'Month' = 'Month', 'Year' = 'Year')) |> 
  
  #Calculated trade balance
  mutate(Trade_Balance_SGD = Export_SGD - Import_SGD,
         Trade_Volumes_SGD = Export_SGD + Import_SGD) |> 
  
  #remove countries with non-available export data
  filter(!Countries %in% c(import_vs_export$diff, "Germany, Democratic Republic Of", "Other Countries In Oceania"))

kable(head(sgtrade_cln))
```

#### 2.2.4 Finding top countries by trade volume

Calculate trade volume and percentage of trades by countries. Intent is to limit the scope of the studies to the countries that contributed to at least 0.05% of Singapore Trade Volumes

```{r}
sgtrade_top_ctry <- sgtrade_cln |> 
  group_by(Countries) |> 
  summarise(Total_Trade_Volumes_SGD = sum(Trade_Volumes_SGD)) |> 
  mutate(Pct_Total_Trade_Volumes = round(Total_Trade_Volumes_SGD*100/sum(Total_Trade_Volumes_SGD), digits = 2)) |> 
  ungroup() |> 
  arrange(desc(Pct_Total_Trade_Volumes))

kable(head(sgtrade_top_ctry))
```

Filtering the ***sgtrade_cln*** data

```{r}
top0.05 <- sgtrade_top_ctry |> 
  filter(Pct_Total_Trade_Volumes > 0.05)

sgtrade_cln <- sgtrade_cln |> 
  filter(Countries %in% top0.05$Countries) |> 
  left_join(top0.05, by = c('Countries' = 'Countries'))


sgtrade_cln |> 
  distinct(Countries)
```

#### 2.2.5 Finding top countries by rate of change of trade volume from 2020 to 2022

```{r}
#sgtrade_top_rate_ctry <- sgtrade_cln |> 
#  group_by(Countries, Year) |>
#  summarise(Total_Trade_Volumes_SGD = sum(Trade_Volumes_SGD)) |> 
#  ungroup() |> 
#  filter(Year %in% c(2020,2022)) |> 
#  pivot_wider(names_from = Year,
#              names_prefix = "Trade_Volumes_SGD",
#              values_from = Total_Trade_Volumes_SGD) |> 
#  mutate(Diff_Trade_Volumes_SGD_2020_2022 = Trade_Volumes_SGD2022 - #Trade_Volumes_SGD2020,
#         Abs_Diff_Trade_Volumes_SGD_2020_2022 = abs(Diff_Trade_Volumes_SGD_2020_2022))|> 
#  arrange(desc(Abs_Diff_Trade_Volumes_SGD_2020_2022))

#kable(head(sgtrade_top_rate_ctry))
```

## **3. Visualisation**

### 3.1 Exploratory Data Visualisation 

#### 3.1.1 Overall Singapore Trade Balance

```{r, Overall Singapore Trade Balance}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-height: 8
#| fig-width: 10
totalsgtrade <- sgtrade_cln |> 
  group_by(Month_Year) |> 
  summarise(Import = sum(Import_SGD),
            Export = sum(Export_SGD))

totalsgtrade_long <- totalsgtrade |> 
  pivot_longer(cols = !Month_Year,
               names_to = "Type",
               values_to = "Values")
  
ggplot() +
  geom_line(data = totalsgtrade_long,
            aes(x = Month_Year,
                y = Values,
                color = Type),
            size = 1.2) +
  
  geom_braid(data = totalsgtrade,
             aes(x = Month_Year,
                 ymin = Import,
                 ymax = Export,
                 fill = Import < Export),
             alpha = 0.6) +
  
  guides(linetype = "none", fill = "none") +
  
  scale_color_manual(values = c("darkblue", "darkred"),
                     labels = c("Export", "Import"),
                     name = NULL) +
  
  scale_fill_manual(values = c("pink", "skyblue")) +
  
  scale_x_date(expand=c(0,0), 
               date_breaks = "6 month",
               date_labels = "%b %Y") +
  
  scale_y_continuous("Trade Values",
                     labels = function(x){paste0('$', abs(x/1000000000),'B')}) +
  
  cowplot::theme_cowplot() +
  
  theme(axis.title.x = element_blank(),
        legend.position = 'top',
        legend.justification = 'center') +
  
  annotate(geom = "label",
           x = as.Date("2020-03-01"),
           y = 50000000000,
           label = "Trade rebounds\npost-Covid19 relaxation",
           hjust = "left",
           color = "black"
           ) +
  
  annotate(geom = "segment",
           x = as.Date("2020-10-05"), 
           y = 50000000000, 
           xend = as.Date("2021-02-01"),  
           yend = 45000000000,  
           color = "grey40",
           arrow = arrow(type = "closed",
                         length = unit(0.15, "inches"))
           ) +
  
  annotate(geom = "label",
           x = as.Date("2022-01-01"),
           y = 38000000000,
           label = "Start of Russia-Ukraine War",
           hjust = "left",
           color = "black"
           ) +
  
  annotate(geom = "segment",
           x = as.Date("2022-04-01"), 
           y = 38500000000, 
           xend = as.Date("2022-02-01"),  
           yend = 43000000000,  
           color = "grey40",
           arrow = arrow(type = "closed",
                         length = unit(0.15, "inches"))
           ) +
  
  annotate(geom = "label",
           x = as.Date("2022-05-01"),
           y = 45000000000,
           label = "Recession headwinds\nresults in trade slumps",
           hjust = "left",
           color = "black"
           ) +
  
  annotate(geom = "segment",
           x = as.Date("2022-09-01"), 
           y = 46000000000, 
           xend = as.Date("2022-07-01"),  
           yend = 58000000000,  
           color = "grey40",
           arrow = arrow(type = "closed",
                         length = unit(0.15, "inches"))
           ) +
  
  
  labs(title = "Since early 2021, Singapore's merchandise trade was recovering from Covid-19\nbut slowed down in mid-2022",
         subtitle = "Total Merchandise Export and Import Trade Value of Singapore (in SGD), 2020-2022",
         caption = "Merchandise Trade by Region/Market from Department of Statistics, Singapore") 

```

#### 3.1.2 Horizon Plots

Provide overview of the trade balance of all the countries. Trellis Line Chart is not a good idea as the scale of trade balances can be very different as we are looking at 52 countries ranging from major trade partners like China to smaller ones like Cyprus

```{r}
cutpoints <- sgtrade_cln  |>  
  mutate(
    outlier = between(
      Trade_Balance_SGD, 
      quantile(Trade_Balance_SGD, 0.25, na.rm=T)-
        1.5*IQR(Trade_Balance_SGD, na.rm=T),
      quantile(Trade_Balance_SGD, 0.75, na.rm=T)+
        1.5*IQR(Trade_Balance_SGD, na.rm=T))) %>% 
  filter(outlier)

sca <- seq(range(cutpoints$Trade_Balance_SGD)[1], 
           range(cutpoints$Trade_Balance_SGD)[2], 
           length.out = 9)[-4]

round(sca, 2) # The horizon scale cutpoints
```

```{r, Horizon Plot}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-height: 12
#| fig-width: 10
sgtrade_cln$Countries <- fct_reorder(sgtrade_cln$Countries, sgtrade_cln$Pct_Total_Trade_Volumes, .desc = TRUE)

sgtrade_cln |> ggplot() +
  geom_horizon(aes(x = Month_Year,
                   y = Trade_Balance_SGD,
                   fill = ..Cutpoints..),
               origin = 0, horizonscale = sca,
               show.legend = FALSE) +
  scale_fill_hcl(palette = 'RdBu') +
  facet_grid(Countries~.) +
  theme_few() +
  
  theme(
    panel.spacing.y=unit(0, "lines"),
    axis.title.x = element_blank(),
    strip.text.y = element_text(size = 7, angle = 0, hjust = 0),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    panel.border = element_blank()
    ) +
  
  scale_x_date(expand=c(0,0), 
               date_breaks = "6 month",
               date_labels = "%b\n%Y") +
  
  labs(title = "Singapore Trade Surplus are slowly decreasing against major partners, except with\nIndonesia, Hong Kong, and Thailand",
         subtitle = "Singapore Trade Balance against trading partners, 2020 to 2022",
         caption = "Merchandise Trade by Region/Market from Department of Statistics, Singapore") 
  
```

Observation Select countries to choose

Major partners (Top 5) - China (trend reversal) - Malaysia (all the way deficit) - USA (positive to negative)

Other Regional Partners (Interesting patterns) - Korea (positive to negative) - Japan (positive to negative) - India (dip around Jul) - Philippines (gain strongly towards end 2022) - New Zealand/Bangladesh (gain strongly towards end 2022) - Cambodia (negative to positive)

Other Major European Partners - Germany - France - UK

Others are due to - mid-range - one intensity
