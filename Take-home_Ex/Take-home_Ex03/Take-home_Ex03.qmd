---
title: "Take-home Exercise 3"
subtitle: "Visual Analytics of Resale Prices of Singapore Public Housing Properties"
author: "Michael Djohan"
date: 05 February 2023
date-modified: "`r Sys.Date()`"
fontsize: smaller
execute: 
  warning: false
format: html
editor: visual
---

## **1. Overview**

This exercise aims to uncover the salient patterns of the resale prices of public housing property by residential towns and estates in Singapore using appropriate analytical visualisation techniques. The visualization is designed using `ggplot2`, its extensions, and `tidyverse` packages.

The original dataset was downloaded from [Data.gov.sg](https://data.gov.sg/) titled *Resale flat princes based on registration date from Jan-2017 onwards.*

The file downloaded was *resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv*

The focus of the study is on **3-ROOM, 4-ROOM and 5-ROOM types** for **2022** period.

```{r}
#Load packages
pacman::p_load(plotly, tidyverse)

#Import data
flatprice <- read_csv("data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv", show_col_types = FALSE)
```

```{r}
#Data preparation

#filter for 2022 and 3-ROOM, 4-ROOM, 5-ROOM
#mutate remaining_lease to years
flatpriceclean <- flatprice |> 
  filter(flat_type %in% c('3 ROOM','4 ROOM','5 ROOM')) |> 
  mutate(year = as.integer(format(as.Date(paste(month, "-01", sep="")), "%Y")),
         month = as.integer(format(as.Date(paste(month, "-01", sep="")), "%m")),
         .before = 1)|> 
  filter(year == 2022) |> 
  mutate(remaining_lease_years = round((as.numeric(str_extract(remaining_lease, "^[0-9]+")) + 
                           ifelse(is.na(as.numeric(str_extract(remaining_lease, " [0-9]+"))), 0, as.numeric(str_extract(remaining_lease, " [0-9]+")))/12), digits = 1),
         resale_price_persqm = round(resale_price/floor_area_sqm, digits = 1),
         lease_commence_date = as.integer(lease_commence_date),
         .after = remaining_lease) 

head(flatpriceclean)
```

```{r}
#Check for missing values
any(is.na(flatpriceclean))
```

```{r}
#write_csv(flatpriceclean, "flatpriceclean.csv")
```

Animation does not make sense here since this is not data evolution through time

```{r}
#ggplot(flatpriceclean, aes(x = floor_area_sqm, y = resale_price, 
#                       colour = flat_type)) +
  
#  geom_point(alpha = 0.7, 
#             show.legend = FALSE) +
  
#  scale_color_manual(values = c("red","blue","green"),
#                     label = flatpriceclean$flat_type) +
  
#  labs(title = 'Lease Commence Year: {frame_time}', 
#       x = 'Floor Area (sqm)', 
#       y = 'Resale Price (SGD)') +
  
#  transition_time(lease_commence_date) +       
#  ease_aes('linear')    
```

The first plot purpose is to provide preliminary insight on the resale price of property vs remaining lease. the plot looks very clutteres as the number of dataset is high, however, this is deemed to be sufficient for preliminary analysis. Note that the resale price is normalized with floor area, as absolute resale price tends to be more expensive for bigger area.

The first plot design consideration :

-   Color legend for flat type (3 ROOM, 4 ROOM, 5 ROOM) in plotly allows users to filter accordingly

-   Bubble plot size is based on floor area

-   Hover tip displaying the resale price, floor area, remaining lease, and flat type

```{r}
d <- highlight_key(flatpriceclean)

plot_ly(data = d,
        x = ~remaining_lease_years,
        y = ~resale_price_persqm,
        hovertemplate = ~paste("<br>Resale Price per sqm:", resale_price_persqm,
                               "<br>Floor Area (sqm):", floor_area_sqm,
                               "<br>Remaining Lease (Year):", remaining_lease_years),
        type = 'scatter',
        mode = 'markers',
        size = ~floor_area_sqm,
        sizes = c(5, 12.5),
        color = ~flat_type,
        marker = list(opacity = 0.6,
                      sizemode = 'diameter',
                      line = list(width = 0.2, color = '#FFFFFF'))) |> 
  layout(title = "Resale Price per flat area increases with remaining lease, 2022 transactions",
         xaxis = list(title = "Remaining Lease (Year)"),
         yaxis = list(title = "Resale Price per sqm (SGD)"))


```
